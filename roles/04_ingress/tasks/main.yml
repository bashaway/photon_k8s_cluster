# https://metallb.universe.tf/installation/
- name: metallb - configure namespace
  shell: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/namespace.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- pause: seconds=10

- name: metallb - deploy metallb
  shell: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.10.2/manifests/metallb.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- pause: seconds=10

- name: metallb - wait for metallb pods
  shell: kubectl wait -n metallb-system pod -l app=metallb --for=condition=ready     --timeout=60s
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: metallb - check if metalLB pods are up.
  vars:
    regex_run: '^Running(\nRunning)*$'
  shell:  kubectl get pods -n metallb-system --no-headers=true | awk '{print $3}'
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: pods_status
  until: pods_status.stdout is search(regex_run)
  retries: 10
  delay: 30


- name: metallb - copy l2 config file
  template: src=metallb-l2config.yaml.j2 dest={{ dir_resources }}/metallb-l2config.yaml

- name: metallb - deploy l2 config
  shell: kubectl apply -f {{ dir_resources }}/metallb-l2config.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- pause: seconds=10


- name: nginx ingress - deploy ingress
  shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.0/deploy/static/provider/cloud/deploy.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- pause: seconds=10
- name: nginx ingress - wait for ingress-nginx pods
  shell: kubectl wait -n ingress-nginx pod -l app.kubernetes.io/component=controller --for=condition=ready --timeout=60s
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: nginx ingress - check if ingress-nginx pods are up.
  vars:
    regex_run: '^Running(\nRunning)*$'
  shell:  kubectl get pods -n ingress-nginx --no-headers=true | grep ingress-nginx-controller | awk '{print $3}'
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: pods_status
  until: pods_status.stdout is search(regex_run)
  retries: 10
  delay: 30

- name: nginx ingress - enable ssl passthrough
  shell: |
    kubectl patch deployment -n ingress-nginx ingress-nginx-controller --type='json' -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--enable-ssl-passthrough"}]'
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

# https://stackoverflow.com/questions/61616203/nginx-ingress-controller-failed-calling-webhook
- name: nginx ingress - delete webhook from nginx addmission
  shell: kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

